<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:buttonext="com.tm.spark.buttonext.*" >
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import controllers.FeicaoController;
			import controllers.FeicaoControllerEvent;
			import controllers.FerramentaGeometriaControllerEvent;
			
			import models.Esri.DesenhadorEsri;
			import models.Esri.GeometriaEsriGraphic;
			import models.Feicao;
			import models.FeicaoObjeto;
			import models.FeicaoSelecionada;
			import models.FeicoesSelecionadas;
			import models.FeicoesSnapSelecionadas;
			import models.Geometria;
			import models.LayerFeicao;
			import models.LayerFeicaoSelecionada;
			import models.Retorno;
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			
			[Embed( source="../assets/cursor_desenhar.png")]
			private var cursorMouse:Class;
			public var ligado:Boolean = false;
			private var xClique:Number;
			private var yClique:Number;
			private var pontoMouse:Point;
			public var pausado:Boolean = false;
			private var menuItem:ContextMenuItem = null;
			
			private var desabilitaSnap:Boolean = false;
			
			private var estavaPausado:Boolean = true;

			public function ligarDesligar():void
			{
				if(ligado || !LayerFeicaoSelecionada.getInstance().layerFeicao)
				{
					if(pausado)
						pausarDespausar();
					else if((FeicaoSelecionada.getInstance().geometria.vertices && FeicaoSelecionada.getInstance().geometria.vertices.length>0) ||
						(FeicaoSelecionada.getInstance().geometria.aneis && FeicaoSelecionada.getInstance().geometria.aneis.length>0))
					{
						Alert.yesLabel = 'Sim';
						Alert.noLabel = 'Não';
						Alert.show('Deseja realmente descartar as alterações deste desenho?','',Alert.NO|Alert.YES,null, desligar, null, Alert.NO);
					}
					else
					{
						desligar();
					}
				}
				else
					ligar();
			}
			
			public function ligar():void
			{
				if(LayerFeicaoSelecionada.getInstance().layerFeicao)
				{
					dispatchEvent(new FerramentaGeometriaControllerEvent(FerramentaGeometriaControllerEvent.DESLIGAR, ligarOk, this));
				}
			}
			
			private function ligarOk(isInit:Boolean=true,deixarHabilitadoSnap:Boolean=false):void
			{
				btnInserir.styleName = "inserir_geo_ativado";
				if(isInit)
				{
					FeicaoSelecionada.getInstance().limpar(true);
					FeicaoController.getInstance().addEventListener(FeicaoControllerEvent.CADASTRAR,cadastrarResult);
				}
				if(!deixarHabilitadoSnap)
				{
					dispatchEvent(new FerramentaGeometriaControllerEvent(FerramentaGeometriaControllerEvent.HABILITAR_SNAP,null, this,true));
					FeicoesSnapSelecionadas.getInstance().desenhar();
					dispatchEvent(new FerramentaGeometriaControllerEvent(FerramentaGeometriaControllerEvent.DESLIGAR_OUTRAS_FERRAMENTAS, null, this,false,true,true));
				}
				DesenhadorEsri.getInstance().map.addEventListener(MouseEvent.CLICK, desenharClickMouse);
				this.parentApplication.addEventListener(MouseEvent.MOUSE_MOVE, desenharMoveMouse);
				this.parentApplication.addEventListener(KeyboardEvent.KEY_UP, acaoTecladoUp);
				this.parentApplication.addEventListener(KeyboardEvent.KEY_DOWN, acaoTecladoDown);
				
				FeicaoSelecionada.getInstance().layerFeicao = LayerFeicaoSelecionada.getInstance().layerFeicao as LayerFeicao;
				LayerFeicaoSelecionada.getInstance().isDesenhando = true;
				cursorManager.removeAllCursors();
				cursorManager.setCursor(cursorMouse,1,-1, -15);
				FeicoesSnapSelecionadas.getInstance().buscarPontosProximos = true;
				ligado = true;
				if(DesenhadorEsri.getInstance().map)
					DesenhadorEsri.getInstance().map.panEnabled = false;
				
				menuItem = new ContextMenuItem("Finalizar desenho", false, true, true);
				menuItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, menuItem_menuItemSelect);
				DesenhadorEsri.getInstance().map.contextMenu.customItems.push(menuItem);
			}
			private function menuItem_menuItemSelect(evt:ContextMenuEvent):void {
				if(FeicaoSelecionada.getInstance().geometria && 
					((FeicaoSelecionada.getInstance().geometria.aneis && FeicaoSelecionada.getInstance().geometria.aneis.length>0) || 
						(FeicaoSelecionada.getInstance().geometria.vertices && FeicaoSelecionada.getInstance().geometria.vertices.length >0)))
				{
					finalizar();
				}
			}
		
			public function desligar(ev:CloseEvent=null):void
			{
				if(!ev|| ( ev && ev.detail == Alert.YES))
				{
					if(menuItem)
					{
						DesenhadorEsri.getInstance().map.contextMenu.customItems.pop();
						menuItem = null;
					}
					desligarSemApagarFeicao();
					FeicoesSelecionadas.getInstance().limpar(false);
					FeicaoSelecionada.getInstance().limpar(false);
					FeicaoController.getInstance().removeEventListener(FeicaoControllerEvent.CADASTRAR,cadastrarResult);
				}
			}
			
			public function desligarSemApagarFeicao(deixarHabilitadoSnap:Boolean=false):void
			{	
				DesenhadorEsri.getInstance().map.removeEventListener(MouseEvent.CLICK, desenharClickMouse);
				this.parentApplication.removeEventListener(MouseEvent.MOUSE_MOVE, desenharMoveMouse);
				this.parentApplication.removeEventListener(KeyboardEvent.KEY_UP, acaoTecladoUp);	
				this.parentApplication.removeEventListener(KeyboardEvent.KEY_DOWN, acaoTecladoDown);
								
				ligado = false;
				pausado = false;				
				FeicoesSnapSelecionadas.getInstance().buscarPontosProximos = false;				
											
				if(!deixarHabilitadoSnap)
				{
					cursorManager.removeAllCursors();
					if(DesenhadorEsri.getInstance().map)
						DesenhadorEsri.getInstance().map.panEnabled = true;
					FeicoesSnapSelecionadas.getInstance().limpar(false);
					dispatchEvent(new FerramentaGeometriaControllerEvent(FerramentaGeometriaControllerEvent.HABILITAR_SNAP,null, this,false));
					btnInserir.styleName = "inserir_geo";
					LayerFeicaoSelecionada.getInstance().isDesenhando = false;	
				}
			}
			
			public function pausarDespausar(deixarHabilitadoSnap:Boolean=false):void
			{
				if(ligado)
				{
					if(pausado)
					{
						ligarOk(false,deixarHabilitadoSnap);
						pausado = false;
						dispatchEvent(new FerramentaGeometriaControllerEvent(FerramentaGeometriaControllerEvent.LIGAR_DESLIGAR_PAN,null, this,false));
						
						
						if (estavaPausado)
						{
							desabilitaSnap = true;
							estavaPausado = estavaPausado;
						}
					}
					else
					{
						estavaPausado = !estavaPausado;
						desabilitaSnap = false;
						
						desligarSemApagarFeicao(deixarHabilitadoSnap);
						ligado = true;
						pausado = true;
						btnInserir.styleName = "inserir_geo_ativado";
						FeicaoSelecionada.getInstance().geometria.desenhar(null,null,GeometriaEsriGraphic.Desenho,true);
						dispatchEvent(new FerramentaGeometriaControllerEvent(FerramentaGeometriaControllerEvent.LIGAR_DESLIGAR_PAN,null, this,true));
					}
				}
			}
			
			protected function acaoTecladoUp(event:KeyboardEvent):void
			{	
				switch(event.keyCode) 
				{
					case Keyboard.BACKSPACE:
					case Keyboard.DELETE:// delete
						FeicaoSelecionada.getInstance().geometria.removerVertice();
						FeicaoSelecionada.getInstance().geometria.desenhar(null,null,GeometriaEsriGraphic.Desenho,true);	
						if(FeicaoSelecionada.getInstance().layerFeicao.TipoGeometria == Geometria.Ponto)
						{
							this.parentApplication.addEventListener(MouseEvent.MOUSE_MOVE, desenharMoveMouse);
						}
						break;
					case Keyboard.CONTROL:;
						dispatchEvent(new FerramentaGeometriaControllerEvent(FerramentaGeometriaControllerEvent.SNAP_ISATIVADO,null, this,false));
						DesenhadorEsri.getInstance().map.addEventListener(MouseEvent.CLICK, desenharClickMouse);
						this.parentApplication.addEventListener(MouseEvent.MOUSE_MOVE, desenharMoveMouse);
						cursorManager.removeAllCursors();
						cursorManager.setCursor(cursorMouse,1,-1, -15);
						if(DesenhadorEsri.getInstance().map)
							DesenhadorEsri.getInstance().map.panEnabled = false;
						break;
					case Keyboard.ENTER:
						if(FeicaoSelecionada.getInstance().geometria && 
							((FeicaoSelecionada.getInstance().geometria.aneis && FeicaoSelecionada.getInstance().geometria.aneis.length>0) || 
							 (FeicaoSelecionada.getInstance().geometria.vertices && FeicaoSelecionada.getInstance().geometria.vertices.length >0)))
						{
							finalizar();
						}
						break;
					case Keyboard.ESCAPE:
						Alert.yesLabel = 'Sim';
						Alert.noLabel = 'Não';
						Alert.show('Deseja realmente descartar as alterações deste desenho?','',Alert.NO|Alert.YES,null, desligar, null, Alert.NO);
						break;
				}	
			}
			
			protected function acaoTecladoDown(event:KeyboardEvent):void
			{
				if(event.ctrlKey)
				{
					DesenhadorEsri.getInstance().map.removeEventListener(MouseEvent.CLICK, desenharClickMouse);
					this.parentApplication.removeEventListener(MouseEvent.MOUSE_MOVE, desenharMoveMouse);
					dispatchEvent(new FerramentaGeometriaControllerEvent(FerramentaGeometriaControllerEvent.SNAP_ISATIVADO,null, this,true));
					FeicaoSelecionada.getInstance().geometria.desenhar(null,null,GeometriaEsriGraphic.Desenho,true);
				}	
			}
			
			protected function desenharClickMouse(ev:MouseEvent):void
			{	
				var range:Number = DesenhadorEsri.getInstance().range();
				var ar:Vector.<Point> = null;
				
				
				for each (var f:Feicao in FeicoesSelecionadas.getInstance().feicoes)
				{
					if (f.layerFeicao.Nome.indexOf("Rio (linha)") >= 0)
					{
						Alert.show("Não é possível inserir Rio (linha)."); 
						
						return;
					}
				}
				
				if(!(ev.target is ButtonExt))
				{
					var pt:Point = DesenhadorEsri.getInstance().converterMouseParaPoint(ev);
					var pontoIntersectado:Point = null;
					if(FeicoesSnapSelecionadas.getInstance().feicoes && FeicoesSnapSelecionadas.getInstance().feicoes.length>0)
					{
						var feicoesSnap:Vector.<Feicao> = FeicoesSnapSelecionadas.getInstance().feicoes;
						//verifica vertices
						
						if (desabilitaSnap)
							range = DesenhadorEsri.getInstance().range(1); 
						else
							range = DesenhadorEsri.getInstance().range(7);
						
						for(var i:int =0; i< feicoesSnap.length; i++)
						{  
							pontoIntersectado = FeicaoSelecionada.getInstance().geometria.buscarVerticeIntersectado(pt, range, feicoesSnap[i].geometria.vertices,
								feicoesSnap[i].geometria.aneis, false);
							
							if(pontoIntersectado)
								break;
						}
						
						if(!pontoIntersectado)
						{
							//verifica arestas
							if (desabilitaSnap)
								range = DesenhadorEsri.getInstance().range(1); 
							else
								range = DesenhadorEsri.getInstance().range(4);
							
							for(var i:int =0; i< feicoesSnap.length; i++)
							{  
								pontoIntersectado = FeicaoSelecionada.getInstance().geometria.buscarPontoProximoNoMeioDaAresta(pt,range, feicoesSnap[i].geometria.vertices,
									feicoesSnap[i].geometria.aneis,false);
								
								if(pontoIntersectado)
									break;
							}
						}
					}
					
					if(FeicaoSelecionada.getInstance().layerFeicao.TipoGeometria == Geometria.Ponto)
					{
						if(FeicaoSelecionada.getInstance().geometria.vertices.length ==0 || FeicaoSelecionada.getInstance().geometria.verticeSelecionado)
						{
							if(pontoIntersectado)
								FeicaoSelecionada.getInstance().geometria.adicionarPonto(pontoIntersectado);
							else
								FeicaoSelecionada.getInstance().geometria.adicionarPonto(pt);
							FeicaoSelecionada.getInstance().geometria.desenhar(null,null,GeometriaEsriGraphic.Desenho,true);	
							this.parentApplication.removeEventListener(MouseEvent.MOUSE_MOVE, desenharMoveMouse);
							FeicaoSelecionada.getInstance().geometria.verticeSelecionado = null;
							finalizar();
							return;
						}
						/*var vertice:Point = FeicaoSelecionada.getInstance().geometria.buscarVerticeIntersectado(pt,range,null,null,false);
						if(vertice)
						{   
							FeicaoSelecionada.getInstance().geometria.verticeSelecionado = vertice;
							FeicaoSelecionada.getInstance().geometria.removerVertice();
							this.parentApplication.addEventListener(MouseEvent.MOUSE_MOVE, desenharMoveMouse);
							return;
						}*/
					}
					else
					{
						if(pontoIntersectado)
						{
							FeicaoSelecionada.getInstance().geometria.adicionarPonto(pontoIntersectado);
							FeicaoSelecionada.getInstance().geometria.desenhar(null,null,GeometriaEsriGraphic.Desenho,true);
							return;
						}
					
						if(FeicaoSelecionada.getInstance().geometria.selecionarVertice(pt,range))
						{	
							FeicaoSelecionada.getInstance().geometria.removerVertice();
							FeicaoSelecionada.getInstance().geometria.desenhar(null,null,GeometriaEsriGraphic.Desenho,true);	
							return;
						}
						
						var isPoligono:Boolean = FeicaoSelecionada.getInstance().geometria.tipoGeometria == Geometria.Poligono;
						if(FeicaoSelecionada.getInstance().geometria.verificaIntersecaoPontoNoMeioArestaMudandoIndice(pt,range,null,null,false,isPoligono,true))
						{
							FeicaoSelecionada.getInstance().geometria.desenhar(null,null,GeometriaEsriGraphic.Desenho,true);
							return;
						}
						
						FeicaoSelecionada.getInstance().geometria.adicionarPonto(pt);
						
						FeicaoSelecionada.getInstance().geometria.desenhar(null,null,GeometriaEsriGraphic.Desenho,true);
					}	
				}
			}
			
			protected function desenharMoveMouse(ev:MouseEvent):void
			{				
				var pt:Point = DesenhadorEsri.getInstance().converterMouseParaPoint(ev);
				pontoMouse = pt;
				FeicoesSnapSelecionadas.getInstance().pontoMouse = pontoMouse;
				var range:Number = DesenhadorEsri.getInstance().range();
				if(FeicoesSnapSelecionadas.getInstance().feicoes && FeicoesSnapSelecionadas.getInstance().feicoes.length>0)
				{
					var pontoIntersectado:Point = null;
					var feicoesSnap:Vector.<Feicao> = FeicoesSnapSelecionadas.getInstance().feicoes;
					range = DesenhadorEsri.getInstance().range(25);
				
					//verifica vertices
					//verifica vertices
					if (desabilitaSnap)
						range = DesenhadorEsri.getInstance().range(1); 
					else
						range = DesenhadorEsri.getInstance().range(7);
					
				
					pontoIntersectado = FeicaoSelecionada.getInstance().geometria.buscarVerticeIntersectado(pt, range, FeicoesSnapSelecionadas.getInstance().verticesMaisProximos,
						null, true);
					
					if(pontoIntersectado)
					{
						FeicaoSelecionada.getInstance().geometria.desenharTemporario(pontoIntersectado,true,GeometriaEsriGraphic.Desenho,true);
						return;
					}
				
					if(!pontoIntersectado)
					{
						//verifica arestas
						if (desabilitaSnap)
							range = DesenhadorEsri.getInstance().range(1); 
						else
							range = DesenhadorEsri.getInstance().range(4);
						
						for(var i:int =0; i< feicoesSnap.length; i++)
						{  							
							pontoIntersectado = FeicaoSelecionada.getInstance().geometria.buscarPontoProximoNoMeioDaAresta(pt,range, feicoesSnap[i].geometria.vertices,
								feicoesSnap[i].geometria.aneis,false);
							
							if(pontoIntersectado)
							{
								FeicaoSelecionada.getInstance().geometria.desenharTemporario(pontoIntersectado,true,GeometriaEsriGraphic.Desenho,true);
								return;
							}
						}
					}
				}
				var isPoligono:Boolean =FeicaoSelecionada.getInstance().geometria.tipoGeometria == Geometria.Poligono;
				pontoIntersectado = FeicaoSelecionada.getInstance().geometria.buscarPontoProximoNoMeioDaAresta(pt,range, null,null,false,isPoligono,true);
				
				if(pontoIntersectado)
				{
					FeicaoSelecionada.getInstance().geometria.desenharTemporario(pontoIntersectado,false,GeometriaEsriGraphic.Desenho,true);
					FeicaoSelecionada.getInstance().geometria.desenhar(null,null,GeometriaEsriGraphic.Desenho,true);
				}
				else
				{
					FeicaoSelecionada.getInstance().geometria.desenharTemporario(pt,true,GeometriaEsriGraphic.Desenho,true);
				}
				
			}
			
			protected function finalizar(ev:Event=null):void
			{
				FeicaoSelecionada.getInstance().geometria.desenhar(null,null,GeometriaEsriGraphic.Desenho,true);
				desligarSemApagarFeicao();
				FeicaoController.getInstance().CadastrarFeicao(new FeicaoObjeto(FeicaoSelecionada.getInstance().layerFeicao, FeicaoSelecionada.getInstance().idProjeto, FeicaoSelecionada.getInstance().geometria.vertices ));
				cursorManager.setBusyCursor();
			}
			
			protected function cadastrarResult(event:Event):void
			{
				DesenhadorEsri.getInstance().refreshMapDesenho();
				if(event!=null && event is FeicaoControllerEvent)
				{
					var resposta:Retorno = (event as FeicaoControllerEvent).resposta;
					if(resposta.Sucesso) 
					{
						FeicaoSelecionada.getInstance().limpar(true);
						FeicoesSelecionadas.getInstance().limpar(true);
						FeicoesSnapSelecionadas.getInstance().limpar(true);
						dispatchEvent(new FerramentaGeometriaControllerEvent(FerramentaGeometriaControllerEvent.FINALIZAR_GEOMETRIA,null, this));
						desligar();
						ligar();
					}
					else
					{
						Alert.show(resposta.Mensagem);
						ligarOk(false);
					}
					cursorManager.removeBusyCursor();
				}
			}			
		]]>
	</fx:Script>
	<buttonext:ButtonExt id="btnInserir" click="ligarDesligar()" styleName="inserir_geo"  toolTip="Inserir" />
</s:Group>
